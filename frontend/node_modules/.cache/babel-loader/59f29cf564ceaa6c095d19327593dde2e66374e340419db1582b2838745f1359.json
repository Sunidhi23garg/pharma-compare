{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive\\\\Desktop\\\\123\\\\medlr\\\\frontend\\\\src\\\\pages\\\\SearchResults.js\",\n  _s = $RefreshSig$();\n// // // src/pages/SearchResults.js\n// // import React, { useState, useEffect } from 'react';\n// // import { useLocation } from 'react-router-dom';\n// // import axios from '../api/axios';\n// // import MedicineCard from '../components/common/MedicineCard';\n\n// // const SearchResults = () => {\n// //   const [results, setResults] = useState([]);\n// //   const [loading, setLoading] = useState(true);\n// //   const [error, setError] = useState(null);\n// //   const location = useLocation();\n// //   const searchQuery = new URLSearchParams(location.search).get('q');\n\n// //   useEffect(() => {\n// //     const fetchResults = async () => {\n// //       try {\n// //         setLoading(true);\n// //         const response = await axios.get(`/medicines?name=${searchQuery}`);\n// //         setResults(response.data);\n// //         setError(null);\n// //       } catch (err) {\n// //         setError('Failed to fetch results. Please try again.');\n// //       } finally {\n// //         setLoading(false);\n// //       }\n// //     };\n\n// //     if (searchQuery) {\n// //       fetchResults();\n// //     }\n// //   }, [searchQuery]);\n\n// //   if (loading) {\n// //     return (\n// //       <div className=\"flex justify-center items-center min-h-screen\">\n// //         <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n// //       </div>\n// //     );\n// //   }\n\n// //   if (error) {\n// //     return (\n// //       <div className=\"container mx-auto px-4 py-8\">\n// //         <div className=\"text-center text-red-600\">{error}</div>\n// //       </div>\n// //     );\n// //   }\n\n// //   return (\n// //     <div className=\"container mx-auto px-4 py-8\">\n// //       <h2 className=\"text-2xl font-bold mb-6\">\n// //         Search Results for \"{searchQuery}\"\n// //       </h2>\n// //       {results.length === 0 ? (\n// //         <p className=\"text-center text-gray-600\">\n// //           No medicines found matching your search.\n// //         </p>\n// //       ) : (\n// //         <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n// //           {results.map((medicine) => (\n// //             <MedicineCard key={medicine._id} medicine={medicine} />\n// //           ))}\n// //         </div>\n// //       )}\n// //     </div>\n// //   );\n// // };\n\n// // export default SearchResults;\n\n// // src/pages/SearchResults.js\n// // import React, { useState, useEffect } from 'react';\n// // import { useLocation } from 'react-router-dom';\n// // import axios from '../api/axios';\n// // import MedicineCard from '../components/common/MedicineCard';\n\n// // const SearchResults = () => {\n// //   const [results, setResults] = useState([]);\n// //   const [loading, setLoading] = useState(true);\n// //   const [error, setError] = useState(null);\n// //   const location = useLocation();\n// //   const searchQuery = new URLSearchParams(location.search).get('q');\n\n// //   useEffect(() => {\n// //     const fetchResults = async () => {\n// //       if (searchQuery) {\n// //         try {\n// //           setLoading(true);\n// //           const response = await axios.get(`/medicines?name=${searchQuery}`);\n// //           console.log('Fetched Results:', response.data); // Add a log to confirm results\n// //           setResults(response.data);\n// //           setError(null);\n// //         } catch (err) {\n// //           setError('Failed to fetch results. Please try again.');\n// //         } finally {\n// //           setLoading(false);\n// //         }\n// //       }\n// //     };\n\n// //     fetchResults();\n// //   }, [searchQuery]);\n\n// //   if (loading) {\n// //     return (\n// //       <div className=\"flex justify-center items-center min-h-screen\">\n// //         <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n// //       </div>\n// //     );\n// //   }\n\n// //   if (error) {\n// //     return (\n// //       <div className=\"container mx-auto px-4 py-8\">\n// //         <div className=\"text-center text-red-600\">{error}</div>\n// //       </div>\n// //     );\n// //   }\n\n// //   // return (\n// //   //   <div className=\"container mx-auto px-4 py-8\">\n// //   //     <h2 className=\"text-2xl font-bold mb-6\">\n// //   //       Search Results for \"{searchQuery}\"\n// //   //     </h2>\n// //   //     {results.length === 0 ? (\n// //   //       <p className=\"text-center text-gray-600\">\n// //   //         No medicines found matching your search.\n// //   //       </p>\n// //   //     ) : (\n// //   //       <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n// //   //         {results.map((medicine, index) => (\n// //   //           // Fallback to index if medicine._id is missing\n// //   //           <MedicineCard key={medicine._id || index} medicine={medicine} />\n// //   //         ))}\n// //   //       </div>\n// //   //     )}\n// //   //   </div>\n// //   // );\n\n// //   return (\n// //     <div className=\"container mx-auto px-4 py-8\">\n// //       <h2 className=\"text-2xl font-bold mb-6\">\n// //         Search Results for \"{searchQuery}\"\n// //       </h2>\n// //       {results.length === 0 ? (\n// //         <p className=\"text-center text-gray-600\">\n// //           No medicines found matching your search.\n// //         </p>\n// //       ) : (\n// //         <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n// //           {results.map((medicine) => (\n// //             <MedicineCard key={medicine._id || medicine.name} medicine={medicine} />\n// //           ))}\n// //         </div>\n// //       )}\n// //     </div>\n// //   );\n\n// // };\n\n// // export default SearchResults;\n\n// import React, { useState, useEffect } from 'react';\n// import { useLocation } from 'react-router-dom';\n// import axios from '../api/axios';\n// import MedicineCard from '../components/common/MedicineCard';\n\n// const SearchResults = () => {\n//   const [results, setResults] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const location = useLocation();\n//   const searchQuery = new URLSearchParams(location.search).get('q');\n\n//   // useEffect(() => {\n//   //   const fetchResults = async () => {\n//   //     try {\n//   //       setLoading(true);\n//   //       const response = await axios.get(`/medicines?name=${searchQuery}`);\n//   //       console.log(\"API Response:\", response.data); // Debugging\n//   //       setResults(response.data);\n//   //       setError(null);\n//   //     } catch (err) {\n//   //       setError('Failed to fetch results. Please try again.');\n//   //     } finally {\n//   //       setLoading(false);\n//   //     }\n//   //   };\n\n//   //   if (searchQuery) {\n//   //     fetchResults();\n//   //   }\n//   // }, [searchQuery]);\n\n//   useEffect(() => {\n//     const fetchResults = async () => {\n//       try {\n//         setLoading(true);\n//         const response = await axios.get(`/medicines?name=${searchQuery}`);\n//         console.log(\"Search Query:\", searchQuery); // Debug search query\n//         console.log(\"API Response:\", response.data); // Debug API response\n//         setResults(response.data);\n//         setError(null);\n//       } catch (err) {\n//         console.error(\"Error fetching results:\", err);\n//         setError('Failed to fetch results. Please try again.');\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     if (searchQuery) {\n//       fetchResults();\n//     }\n//   }, [searchQuery]);\n\n//   if (loading) {\n//     return <div>Loading...</div>;\n//   }\n\n//   if (error) {\n//     return <div>{error}</div>;\n//   }\n\n//   return (\n//     <div>\n//       <h2>Search Results for \"{searchQuery}\"</h2>\n//       {results.length > 0 ? (\n//         // <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n//         //   {results.map((medicine) => (\n//         //     <MedicineCard key={medicine._id} medicine={medicine} />\n//         //   ))}\n//         // </div>\n//         <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n//           {results.map((medicine, index) => (\n//             <MedicineCard key={medicine._id || index} medicine={medicine} />\n//           ))}\n//         </div>\n\n//       ) : (\n//         <p>No medicines found for your query.</p>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default SearchResults;\n\n// src/pages/SearchResults.js\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport axios from \"../api/axios\";\nimport MedicineCard from \"../components/common/MedicineCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchResults = () => {\n  _s();\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [sortOrder, setSortOrder] = useState(\"asc\"); // Default sort order: ascending\n  const location = useLocation();\n  const searchQuery = new URLSearchParams(location.search).get(\"q\");\n  useEffect(() => {\n    const fetchResults = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(`/medicines?name=${searchQuery}`);\n        setResults(response.data);\n        setError(null);\n      } catch (err) {\n        setError(\"Failed to fetch results. Please try again.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (searchQuery) {\n      fetchResults();\n    }\n  }, [searchQuery]);\n\n  // Handle sorting whenever sortOrder changes\n  useEffect(() => {\n    const sortedResults = [...results].sort((a, b) => {\n      if (sortOrder === \"asc\") return a.price - b.price; // Low to High\n      if (sortOrder === \"desc\") return b.price - a.price; // High to Low\n      return 0;\n    });\n    setResults(sortedResults);\n  }, [sortOrder]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center min-h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto px-4 py-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-red-600\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto px-4 py-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-6\",\n      children: [\"Search Results for \\\"\", searchQuery, \"\\\"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6 flex justify-end\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"sortOrder\",\n        className: \"mr-2 text-gray-700\",\n        children: \"Sort by:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"sortOrder\",\n        value: sortOrder,\n        onChange: e => setSortOrder(e.target.value),\n        className: \"border border-gray-300 rounded-md p-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"asc\",\n          children: \"Price: Low to High\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"desc\",\n          children: \"Price: High to Low\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this), results.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-gray-600\",\n      children: \"No medicines found matching your search.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\",\n      children: results.map(medicine => /*#__PURE__*/_jsxDEV(MedicineCard, {\n        medicine: medicine\n      }, medicine._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 316,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchResults, \"5i8zgvx6UUMypDEolHlQagtnfCo=\", false, function () {\n  return [useLocation];\n});\n_c = SearchResults;\nexport default SearchResults;\nvar _c;\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","axios","MedicineCard","jsxDEV","_jsxDEV","SearchResults","_s","results","setResults","loading","setLoading","error","setError","sortOrder","setSortOrder","location","searchQuery","URLSearchParams","search","get","fetchResults","response","data","err","sortedResults","sort","a","b","price","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","target","length","map","medicine","_id","_c","$RefreshReg$"],"sources":["C:/Users/hp/OneDrive/Desktop/123/medlr/frontend/src/pages/SearchResults.js"],"sourcesContent":["// // // src/pages/SearchResults.js\r\n// // import React, { useState, useEffect } from 'react';\r\n// // import { useLocation } from 'react-router-dom';\r\n// // import axios from '../api/axios';\r\n// // import MedicineCard from '../components/common/MedicineCard';\r\n\r\n// // const SearchResults = () => {\r\n// //   const [results, setResults] = useState([]);\r\n// //   const [loading, setLoading] = useState(true);\r\n// //   const [error, setError] = useState(null);\r\n// //   const location = useLocation();\r\n// //   const searchQuery = new URLSearchParams(location.search).get('q');\r\n\r\n// //   useEffect(() => {\r\n// //     const fetchResults = async () => {\r\n// //       try {\r\n// //         setLoading(true);\r\n// //         const response = await axios.get(`/medicines?name=${searchQuery}`);\r\n// //         setResults(response.data);\r\n// //         setError(null);\r\n// //       } catch (err) {\r\n// //         setError('Failed to fetch results. Please try again.');\r\n// //       } finally {\r\n// //         setLoading(false);\r\n// //       }\r\n// //     };\r\n\r\n// //     if (searchQuery) {\r\n// //       fetchResults();\r\n// //     }\r\n// //   }, [searchQuery]);\r\n\r\n// //   if (loading) {\r\n// //     return (\r\n// //       <div className=\"flex justify-center items-center min-h-screen\">\r\n// //         <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\r\n// //       </div>\r\n// //     );\r\n// //   }\r\n\r\n// //   if (error) {\r\n// //     return (\r\n// //       <div className=\"container mx-auto px-4 py-8\">\r\n// //         <div className=\"text-center text-red-600\">{error}</div>\r\n// //       </div>\r\n// //     );\r\n// //   }\r\n\r\n// //   return (\r\n// //     <div className=\"container mx-auto px-4 py-8\">\r\n// //       <h2 className=\"text-2xl font-bold mb-6\">\r\n// //         Search Results for \"{searchQuery}\"\r\n// //       </h2>\r\n// //       {results.length === 0 ? (\r\n// //         <p className=\"text-center text-gray-600\">\r\n// //           No medicines found matching your search.\r\n// //         </p>\r\n// //       ) : (\r\n// //         <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n// //           {results.map((medicine) => (\r\n// //             <MedicineCard key={medicine._id} medicine={medicine} />\r\n// //           ))}\r\n// //         </div>\r\n// //       )}\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default SearchResults;\r\n\r\n// // src/pages/SearchResults.js\r\n// // import React, { useState, useEffect } from 'react';\r\n// // import { useLocation } from 'react-router-dom';\r\n// // import axios from '../api/axios';\r\n// // import MedicineCard from '../components/common/MedicineCard';\r\n\r\n// // const SearchResults = () => {\r\n// //   const [results, setResults] = useState([]);\r\n// //   const [loading, setLoading] = useState(true);\r\n// //   const [error, setError] = useState(null);\r\n// //   const location = useLocation();\r\n// //   const searchQuery = new URLSearchParams(location.search).get('q');\r\n\r\n// //   useEffect(() => {\r\n// //     const fetchResults = async () => {\r\n// //       if (searchQuery) {\r\n// //         try {\r\n// //           setLoading(true);\r\n// //           const response = await axios.get(`/medicines?name=${searchQuery}`);\r\n// //           console.log('Fetched Results:', response.data); // Add a log to confirm results\r\n// //           setResults(response.data);\r\n// //           setError(null);\r\n// //         } catch (err) {\r\n// //           setError('Failed to fetch results. Please try again.');\r\n// //         } finally {\r\n// //           setLoading(false);\r\n// //         }\r\n// //       }\r\n// //     };\r\n  \r\n// //     fetchResults();\r\n// //   }, [searchQuery]);\r\n  \r\n  \r\n\r\n// //   if (loading) {\r\n// //     return (\r\n// //       <div className=\"flex justify-center items-center min-h-screen\">\r\n// //         <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\r\n// //       </div>\r\n// //     );\r\n// //   }\r\n\r\n// //   if (error) {\r\n// //     return (\r\n// //       <div className=\"container mx-auto px-4 py-8\">\r\n// //         <div className=\"text-center text-red-600\">{error}</div>\r\n// //       </div>\r\n// //     );\r\n// //   }\r\n\r\n// //   // return (\r\n// //   //   <div className=\"container mx-auto px-4 py-8\">\r\n// //   //     <h2 className=\"text-2xl font-bold mb-6\">\r\n// //   //       Search Results for \"{searchQuery}\"\r\n// //   //     </h2>\r\n// //   //     {results.length === 0 ? (\r\n// //   //       <p className=\"text-center text-gray-600\">\r\n// //   //         No medicines found matching your search.\r\n// //   //       </p>\r\n// //   //     ) : (\r\n// //   //       <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n// //   //         {results.map((medicine, index) => (\r\n// //   //           // Fallback to index if medicine._id is missing\r\n// //   //           <MedicineCard key={medicine._id || index} medicine={medicine} />\r\n// //   //         ))}\r\n// //   //       </div>\r\n// //   //     )}\r\n// //   //   </div>\r\n// //   // );\r\n\r\n// //   return (\r\n// //     <div className=\"container mx-auto px-4 py-8\">\r\n// //       <h2 className=\"text-2xl font-bold mb-6\">\r\n// //         Search Results for \"{searchQuery}\"\r\n// //       </h2>\r\n// //       {results.length === 0 ? (\r\n// //         <p className=\"text-center text-gray-600\">\r\n// //           No medicines found matching your search.\r\n// //         </p>\r\n// //       ) : (\r\n// //         <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n// //           {results.map((medicine) => (\r\n// //             <MedicineCard key={medicine._id || medicine.name} medicine={medicine} />\r\n// //           ))}\r\n// //         </div>\r\n// //       )}\r\n// //     </div>\r\n// //   );\r\n  \r\n// // };\r\n\r\n// // export default SearchResults;\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useLocation } from 'react-router-dom';\r\n// import axios from '../api/axios';\r\n// import MedicineCard from '../components/common/MedicineCard';\r\n\r\n// const SearchResults = () => {\r\n//   const [results, setResults] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(null);\r\n//   const location = useLocation();\r\n//   const searchQuery = new URLSearchParams(location.search).get('q');\r\n\r\n//   // useEffect(() => {\r\n//   //   const fetchResults = async () => {\r\n//   //     try {\r\n//   //       setLoading(true);\r\n//   //       const response = await axios.get(`/medicines?name=${searchQuery}`);\r\n//   //       console.log(\"API Response:\", response.data); // Debugging\r\n//   //       setResults(response.data);\r\n//   //       setError(null);\r\n//   //     } catch (err) {\r\n//   //       setError('Failed to fetch results. Please try again.');\r\n//   //     } finally {\r\n//   //       setLoading(false);\r\n//   //     }\r\n//   //   };\r\n  \r\n//   //   if (searchQuery) {\r\n//   //     fetchResults();\r\n//   //   }\r\n//   // }, [searchQuery]);\r\n\r\n//   useEffect(() => {\r\n//     const fetchResults = async () => {\r\n//       try {\r\n//         setLoading(true);\r\n//         const response = await axios.get(`/medicines?name=${searchQuery}`);\r\n//         console.log(\"Search Query:\", searchQuery); // Debug search query\r\n//         console.log(\"API Response:\", response.data); // Debug API response\r\n//         setResults(response.data);\r\n//         setError(null);\r\n//       } catch (err) {\r\n//         console.error(\"Error fetching results:\", err);\r\n//         setError('Failed to fetch results. Please try again.');\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n  \r\n//     if (searchQuery) {\r\n//       fetchResults();\r\n//     }\r\n//   }, [searchQuery]);\r\n  \r\n  \r\n\r\n//   if (loading) {\r\n//     return <div>Loading...</div>;\r\n//   }\r\n\r\n//   if (error) {\r\n//     return <div>{error}</div>;\r\n//   }\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Search Results for \"{searchQuery}\"</h2>\r\n//       {results.length > 0 ? (\r\n//         // <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n//         //   {results.map((medicine) => (\r\n//         //     <MedicineCard key={medicine._id} medicine={medicine} />\r\n//         //   ))}\r\n//         // </div>\r\n//         <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n//           {results.map((medicine, index) => (\r\n//             <MedicineCard key={medicine._id || index} medicine={medicine} />\r\n//           ))}\r\n//         </div>\r\n\r\n//       ) : (\r\n//         <p>No medicines found for your query.</p>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default SearchResults;\r\n\r\n\r\n\r\n// src/pages/SearchResults.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport axios from \"../api/axios\";\r\nimport MedicineCard from \"../components/common/MedicineCard\";\r\n\r\nconst SearchResults = () => {\r\n  const [results, setResults] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [sortOrder, setSortOrder] = useState(\"asc\"); // Default sort order: ascending\r\n  const location = useLocation();\r\n  const searchQuery = new URLSearchParams(location.search).get(\"q\");\r\n\r\n  useEffect(() => {\r\n    const fetchResults = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await axios.get(`/medicines?name=${searchQuery}`);\r\n        setResults(response.data);\r\n        setError(null);\r\n      } catch (err) {\r\n        setError(\"Failed to fetch results. Please try again.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (searchQuery) {\r\n      fetchResults();\r\n    }\r\n  }, [searchQuery]);\r\n\r\n  // Handle sorting whenever sortOrder changes\r\n  useEffect(() => {\r\n    const sortedResults = [...results].sort((a, b) => {\r\n      if (sortOrder === \"asc\") return a.price - b.price; // Low to High\r\n      if (sortOrder === \"desc\") return b.price - a.price; // High to Low\r\n      return 0;\r\n    });\r\n    setResults(sortedResults);\r\n  }, [sortOrder]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex justify-center items-center min-h-screen\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"container mx-auto px-4 py-8\">\r\n        <div className=\"text-center text-red-600\">{error}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-4 py-8\">\r\n      {/* Search Results Header */}\r\n      <h2 className=\"text-2xl font-bold mb-6\">\r\n        Search Results for \"{searchQuery}\"\r\n      </h2>\r\n\r\n      {/* Sort Dropdown */}\r\n      <div className=\"mb-6 flex justify-end\">\r\n        <label htmlFor=\"sortOrder\" className=\"mr-2 text-gray-700\">\r\n          Sort by:\r\n        </label>\r\n        <select\r\n          id=\"sortOrder\"\r\n          value={sortOrder}\r\n          onChange={(e) => setSortOrder(e.target.value)}\r\n          className=\"border border-gray-300 rounded-md p-2\"\r\n        >\r\n          <option value=\"asc\">Price: Low to High</option>\r\n          <option value=\"desc\">Price: High to Low</option>\r\n        </select>\r\n      </div>\r\n\r\n      {/* Search Results */}\r\n      {results.length === 0 ? (\r\n        <p className=\"text-center text-gray-600\">\r\n          No medicines found matching your search.\r\n        </p>\r\n      ) : (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          {results.map((medicine) => (\r\n            <MedicineCard key={medicine._id} medicine={medicine} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAIA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}